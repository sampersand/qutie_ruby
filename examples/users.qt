Users = {
  users ||= {};

  __text = {
    if(0 == len(__self?.users, S), [return('no users!')], []),!;

    i=0;
    res = text(sep=''; i?, '. ', __self?.get(i?));
    i++;
    while{ (i? < len( __self?.users, S ) ) {
       res <+- text(sep=''; '\n',i?, '. ', __self?.get(i?));
       i++;
      }
    };
    res?
  };

  get = function(pos?) {
    return(__self?.users.pos?);
  };

  add = function(user?) {
    (__self?.users)!.0 .= [ len(__self?.users, S), user? ]!;
  };
};

User = {
  || pass -> pass; // aka, take the positional argument over the keyword
  || name -> name; // expands to `|name?->name`
  __text = {
    text? @ ('`'+__self?.name+'`', '=', __self?.pass)!
  };
};

users = Users?@()!;
users?.add@(__self=users?; User?@('john', 'password123')!);
# users?.add@(__self=users?; User?@('fred', 'lemmiein')!);
users?.add@(__self=users?; User?@('jill', 'ilikepie')!);
# disp? @ (users?);





