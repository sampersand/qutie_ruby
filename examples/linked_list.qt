LinkedList = {
  head = nil?;

  __text = {
    current = head?;
    res = '[';

    while((current?)){
      res += current? + ', ';
      current = current?.next;
    };
    del(__enviro: res?; NEG_1?);
    del(__enviro: res?; NEG_1?);
    res? + ']'
  };

  unshift = { -> val;
    __self? .= (head, new Node(val?, __self?.head))!;
  }, -> __add_l;

  shift = { -> __amnt;
    res = __self?.head;
    __self? .= (head, __self?.head.next)!;
    res?.data
  }, -> __sub_l
  __get = { -> pos;
    current = __self?.head;
    while((pos? > 0)){
      disp(pos?)
    }
  }
};

Node = {
  data = $?.0;
  next = $?.1 || nil?;

  __text = { text(__self?.data) };
};

list = new LinkedList();
list?.unshift('d');
list?.unshift('c');
list?.unshift('b');
list?.unshift('a');
disp( list? );
disp( list?.0 )
# disp( list?.shift().0 );
# disp( list? );





