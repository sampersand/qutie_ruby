# map={a=3;b=4;c=4;}!;

# disp('len map: ' len(map?) ); #=> 3
# disp('map?.a: ' map?.a  ); # => does not have '3'
# del( map?, a); disp?@[deleted map?.a];
# disp('map?.a: ' map?.a  ); #=> nil
# disp('len map: ' len(map?) ); #=> 2
# prompt[hi]
# disp( a?  )
# del( $?.-1, map );
# disp( a?  ); #=> does not have '3'


# prompt('hi')

Car = class {
   wheels = {
      1, 2, 3, 4, 5, 6,
      stop(2);
      __text={
         ret='[';
         ret?
      };
   }!;
   # __text={'a' + __self?.wheels.__text @ ()! };
};
c = Car? @ ();
del(c?.wheels, 1, S);
disp(c?.wheels.len@(c?.wheels, S)!, c?.wheels);
# disp(c?.wheels)








